{"version":3,"sources":["../../src/main/browser-storage.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,6EAAyD;AACzD,2CAAyC;AACzC,6CAAwD;AAIxD,IAAsB,cAAc;IAQhC,wBAAmB,UAAyC,EAAE,WAA4C,EAAE,WAA4C;QAArI,2BAAA,EAAA,iBAA6B,wBAAU,EAAE;QAAE,4BAAA,EAAA,kBAA+B,0BAAW,EAAE;QAAE,4BAAA,EAAA,kBAA+B,0BAAW,EAAE;QACpJ,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;IAEM,4BAAG,GAAV,UAAc,GAAW,EAAE,IAAwB;QAAnD,iBAcC;QAdoD,kBAAkB;aAAlB,UAAkB,EAAlB,qBAAkB,EAAlB,IAAkB;YAAlB,iCAAkB;;QACnE,MAAM,CAAC,IAAI,OAAO,CAAI,UAAC,OAAO,EAAE,MAAM;YAClC,IAAI,IAAI,GAAG,KAAI,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC1C,EAAE,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAC,GAAG,CAAC,CAAC;YAChB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACP,OAAO,CAAC,CAAA,KAAA,KAAI,CAAC,UAAU,CAAA,CAAC,IAAI,YAAC,OAAO,CAAC,IAAI,EAAE,IAAI,SAAK,QAAQ,GAAE,CAAC;gBACnE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC1B,CAAC;YACL,CAAC;;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,4BAAG,GAAV,UAAc,GAAW,EAAE,IAAO;QAC9B,IAAI,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC,CAAC;QAClE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAEM,+BAAM,GAAb,UAAiB,GAAW;QACxB,IAAI,CAAC,UAAU,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAClC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAIL,qBAAC;AAAD,CA1CA,AA0CC,IAAA;AA1CqB,cAAc;IADnC,yCAAU;qCASwB,wBAAU,EAAkC,0BAAW,EAAmC,0BAAW;GARlH,cAAc,CA0CnC;AA1CqB,wCAAc","file":"browser-storage.js","sourcesContent":["import { autoinject } from \"aurelia-dependency-injection\"\nimport { TypeBinder } from \"type-binder\";\nimport { JsonEncoder, JsonDecoder } from \"aurelia-json\";\nimport { StorageEngine } from \"./storage-engine\";\n\n@autoinject\nexport abstract class BrowserStorage implements StorageEngine {\n\n    private typeBinder: TypeBinder;\n\n    private jsonDecoder: JsonDecoder;\n\n    private jsonEncoder: JsonEncoder;\n\n    public constructor(typeBinder: TypeBinder = new TypeBinder(), jsonDecoder: JsonDecoder = new JsonDecoder(), jsonEncoder: JsonEncoder = new JsonEncoder()) {\n        this.typeBinder = typeBinder;\n        this.jsonDecoder = jsonDecoder;\n        this.jsonEncoder = jsonEncoder;\n    }\n\n    public get<T>(key: string, type?: new(...args) => T, ...generics: any[]): Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            let data = this.getStorage().getItem(key);\n            if (data === null) {\n                reject(key);\n            } else {\n                let wrapper = JSON.parse(data);\n                if (type) {\n                    resolve(this.typeBinder.bind(wrapper.item, type, ...generics));\n                } else {\n                    resolve(wrapper.item);\n                }\n            }\n        });\n    }\n\n    public set<T>(key: string, item: T): Promise<T> {\n        this.getStorage().setItem(key, this.jsonEncoder.encode({ item }));\n        return Promise.resolve(item);\n    }\n\n    public remove<T>(key: string): Promise<StorageEngine> {\n        this.getStorage().removeItem(key);\n        return Promise.resolve(this);\n    }\n\n    protected abstract getStorage(): Storage;\n\n}\n"]}